/* @flow */

declare type $PackageJSON = {
  name: string,
  version: string,
  main: string,
  private: boolean,
  scripts: {
    start: string,
    test: string,
    web: string,
    build: string,
    'test:web': string,
    electron: string,
    haul: string,
    'flow-typed': string,
    postinstall: string
  },
  dependencies: {
    chalk: string,
    dotenv: string,
    'dotenv-expand': string,
    'electron-debug': string,
    'fs-extra': string,
    history: string,
    localforage: string,
    'object-assign': string,
    promise: string,
    'promise-map-es6': string,
    'query-string': string,
    raf: string,
    're-reselect': string,
    react: string,
    'react-art': string,
    'react-dev-tools': string,
    'react-dev-utils': string,
    'react-dom': string,
    'react-native': string,
    'react-native-web': string,
    'react-native-windows': string,
    'react-redux': string,
    'react-router': string,
    'react-router-dom': string,
    'react-router-native': string,
    'react-router-redux': string,
    'reducer-generator-array-map': string,
    'reducer-generator-object-map': string,
    'reducer-generator-reducer': string,
    'reducer-generator-wildcard': string,
    redux: string,
    'redux-devtools-extension': string,
    'redux-logger': string,
    'redux-persist': string,
    'redux-saga': string,
    'redux-thunk': string,
    reselect: string,
    'set-queue': string,
    setimmediate: string,
    shortid: string,
    'source-map-support': string,
    'to-redux-type': string,
    'whatwg-fetch': string
  },
  devDependencies: {
    '@babel/cli': string,
    '@babel/core': string,
    '@babel/node': string,
    '@babel/plugin-codemod-optional-catch-binding': string,
    '@babel/plugin-transform-runtime': string,
    '@babel/polyfill': string,
    '@babel/preset-env': string,
    '@babel/preset-flow': string,
    '@babel/preset-react': string,
    '@babel/preset-stage-0': string,
    '@babel/register': string,
    'app-root-dir': string,
    autoprefixer: string,
    'babel-core': string,
    'babel-eslint': string,
    'babel-loader': string,
    'babel-plugin-lodash': string,
    'babel-plugin-react-native-web': string,
    'babel-plugin-transform-react-remove-prop-types': string,
    'clean-webpack-plugin': string,
    'component-webpack-resolver-plugin': string,
    'cross-env': string,
    'css-loader': string,
    devtron: string,
    electron: string,
    'electron-builder': string,
    'electron-devtools-installer': string,
    eslint: string,
    'eslint-config-airbnb-base': string,
    'eslint-config-react-app': string,
    'eslint-loader': string,
    'eslint-plugin-compat': string,
    'eslint-plugin-flowtype': string,
    'eslint-plugin-import': string,
    'eslint-plugin-jsx-a11y': string,
    'eslint-plugin-promise': string,
    'eslint-plugin-react': string,
    'extract-text-webpack-plugin': string,
    'file-loader': string,
    'flow-bin': string,
    'flow-typed': string,
    haul: string,
    'html-webpack-plugin': string,
    jest: string,
    'lodash-webpack-plugin': string,
    'npm-run-all': string,
    'optimize-js-plugin': string,
    'postcss-cssnext': string,
    'postcss-flexbugs-fixes': string,
    'postcss-import': string,
    'postcss-inline-media': string,
    'postcss-loader': string,
    'react-scripts': string,
    'style-loader': string,
    'sw-precache-webpack-plugin': string,
    'uglify-js': string,
    'uglifyjs-webpack-plugin': string,
    'url-loader': string,
    webpack: string,
    'webpack-dev-server': string,
    'webpack-manifest-plugin': string
  },
  jest: {
    collectCoverageFrom: string[],
    setupFiles: string[],
    testMatch: string[],
    testEnvironment: string,
    testURL: string,
    transform: {
      '^.+.(js|jsx|mjs)$': string,
      '^.+.css$': string,
      '^(?!.*.(js|jsx|mjs|css|json)$)': string
    },
    transformIgnorePatterns: string[],
    moduleNameMapper: {
      '^react-native$': string
    },
    moduleFileExtensions: string[]
  }
};
